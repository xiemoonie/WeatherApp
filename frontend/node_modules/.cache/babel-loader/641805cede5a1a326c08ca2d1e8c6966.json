{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\carod\\\\Documents\\\\React\\\\weatherapplication\\\\weatherapplication\\\\frontend\\\\src\\\\components\\\\Products\\\\ShowsInfo.js\";\nimport React, { Component } from 'react';\nimport GetLatitude from './frontend/components/Target/GetLatitude';\nimport './App.css';\n\nclass ShowsInfo extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      info: {},\n      temp: []\n    };\n  }\n\n  componentDidMount() {\n    this.getItems();\n  }\n\n  getItems() {\n    //console.log(NewTarget.inputs);\n    const url = `https://api.open-meteo.com/v1/forecast?latitude=-28.46&longitude=-65.80&hourly=temperature_2m`;\n    fetch(url).then(response => response.json()).then(response => {\n      this.setState({\n        'info': response,\n        'temp': response.hourly.temperature_2m\n      });\n    });\n  }\n\n  render() {\n    const {\n      info\n    } = this.state;\n    const temp = this.state.temp;\n    const coodenates = this.state.coordinates;\n    var ShowsInfo = Object.keys({\n      info\n    }).map((keyName, i) => /*#__PURE__*/React.createElement(\"ol\", {\n      className: \"clima\",\n      key: i,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"span\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 9\n      }\n    }, \"key: \", i, \" , Latitude: \", info.latitude, \", Longitude: \", info.longitude, \", elevation: \", info.elevation, \", generation time :\", info.generationtime_ms, \", utc: \", info.utc_offset_seconds, \",\")));\n    var tempItems = temp.map(number => /*#__PURE__*/React.createElement(\"li\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 7\n      }\n    }, number));\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"h1\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 10\n      }\n    }, \"Climate app\"), /*#__PURE__*/React.createElement(\"main\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(GetLatitude, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 16\n      }\n    })), /*#__PURE__*/React.createElement(\"ul\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 7\n      }\n    }, ShowsInfo));\n  }\n\n}\n\nexport default ShowsInfo;","map":{"version":3,"sources":["C:/Users/carod/Documents/React/weatherapplication/weatherapplication/frontend/src/components/Products/ShowsInfo.js"],"names":["React","Component","GetLatitude","ShowsInfo","constructor","props","state","info","temp","componentDidMount","getItems","url","fetch","then","response","json","setState","hourly","temperature_2m","render","coodenates","coordinates","Object","keys","map","keyName","i","latitude","longitude","elevation","generationtime_ms","utc_offset_seconds","tempItems","number"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAgC,OAAhC;AACA,OAAOC,WAAP,MAAwB,0CAAxB;AACA,OAAO,WAAP;;AAEA,MAAMC,SAAN,SAAwBF,SAAxB,CAAkC;AAACG,EAAAA,WAAW,CAACC,KAAD,EAAQ;AAClD,UAAMA,KAAN;AACA,SAAKC,KAAL,GAAa;AACXC,MAAAA,IAAI,EAAE,EADK;AAEXC,MAAAA,IAAI,EAAE;AAFK,KAAb;AAID;;AACDC,EAAAA,iBAAiB,GAAG;AAChB,SAAKC,QAAL;AACH;;AACDA,EAAAA,QAAQ,GAAG;AACT;AACE,UAAMC,GAAG,GAAI,+FAAb;AACGC,IAAAA,KAAK,CAACD,GAAD,CAAL,CACAE,IADA,CACKC,QAAQ,IAAIA,QAAQ,CAACC,IAAT,EADjB,EAEAF,IAFA,CAEKC,QAAQ,IAAI;AAChB,WAAKE,QAAL,CAAc;AAAE,gBAAQF,QAAV;AAAoB,gBAAQA,QAAQ,CAACG,MAAT,CAAgBC;AAA5C,OAAd;AAED,KALA;AAMF;;AAELC,EAAAA,MAAM,GAAG;AAEP,UAAM;AAAEZ,MAAAA;AAAF,QAAW,KAAKD,KAAtB;AACA,UAAME,IAAI,GAAG,KAAKF,KAAL,CAAWE,IAAxB;AACA,UAAMY,UAAU,GAAG,KAAKd,KAAL,CAAWe,WAA9B;AACA,QAAIlB,SAAS,GAAGmB,MAAM,CAACC,IAAP,CAAY;AAAEhB,MAAAA;AAAF,KAAZ,EAAsBiB,GAAtB,CAA0B,CAACC,OAAD,EAAUC,CAAV,kBACxC;AAAI,MAAA,SAAS,EAAC,OAAd;AAAsB,MAAA,GAAG,EAAEA,CAA3B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBACMA,CADN,mBAEWnB,IAAI,CAACoB,QAFhB,mBAGYpB,IAAI,CAACqB,SAHjB,mBAIYrB,IAAI,CAACsB,SAJjB,yBAKkBtB,IAAI,CAACuB,iBALvB,aAMMvB,IAAI,CAACwB,kBANX,MADF,CADc,CAAhB;AAaA,QAAIC,SAAS,GAAGxB,IAAI,CAACgB,GAAL,CAAUS,MAAD,iBACvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAKA,MAAL,CADc,CAAhB;AAKA,wBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBADH,eAEM;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACG,oBAAC,WAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADH,CAFN,eAKA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACG9B,SADH,CALA,CADF;AAWD;;AAvD+B;;AAyDlC,eAAeA,SAAf","sourcesContent":["import React, { Component} from 'react';\r\nimport GetLatitude from './frontend/components/Target/GetLatitude';\r\nimport './App.css';\r\n\r\nclass ShowsInfo extends Component {constructor(props) {\r\n    super(props)\r\n    this.state = {\r\n      info: {},\r\n      temp: []\r\n    }\r\n  }\r\n  componentDidMount() {\r\n      this.getItems();\r\n  }\r\n  getItems() {\r\n    //console.log(NewTarget.inputs);\r\n      const url = `https://api.open-meteo.com/v1/forecast?latitude=-28.46&longitude=-65.80&hourly=temperature_2m`;\r\n         fetch(url)\r\n        .then(response => response.json())\r\n        .then(response => {\r\n          this.setState({ 'info': response, 'temp': response.hourly.temperature_2m });\r\n          \r\n        })\r\n      }\r\n\r\n  render() {\r\n\r\n    const { info } = this.state;\r\n    const temp = this.state.temp;\r\n    const coodenates = this.state.coordinates;\r\n    var ShowsInfo = Object.keys({ info }).map((keyName, i) => (\r\n      <ol className=\"clima\" key={i}>\r\n        <span>\r\n        key: {i} ,\r\n        Latitude: {info.latitude},\r\n        Longitude: {info.longitude}, \r\n        elevation: {info.elevation},\r\n        generation time :{info.generationtime_ms}, \r\n        utc: {info.utc_offset_seconds},\r\n          </span>\r\n      </ol>\r\n\r\n    ))\r\n    var tempItems = temp.map((number) =>\r\n      <li>{number}</li>\r\n    );\r\n    \r\n\r\n    return (\r\n      <div> \r\n         <h1>Climate app</h1>\r\n            <main>\r\n               <GetLatitude>{}</GetLatitude>\r\n            </main>\r\n      <ul>\r\n        {ShowsInfo} \r\n      </ul>\r\n      </div>)\r\n\r\n  }\r\n}\r\nexport default ShowsInfo;"]},"metadata":{},"sourceType":"module"}