{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\carod\\\\Documents\\\\React\\\\weatherapplication\\\\weatherapplication\\\\frontend\\\\src\\\\components\\\\Products\\\\ShowsInfo.js\";\nimport React, { Component } from 'react';\nimport './Coordenates';\n\nclass ShowsInfo extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      info: {},\n      temp: []\n    };\n  }\n\n  componentDidMount() {\n    this.getItems();\n  }\n\n  getItems() {\n    const url = `https://api.open-meteo.com/v1/forecast?latitude=-28.46&longitude=-65.80&hourly=temperature_2m`;\n    fetch(url).then(response => response.json()).then(response => {\n      this.setState({\n        'info': response,\n        'temp': response.hourly.temperature_2m\n      });\n    });\n  }\n\n  render() {\n    const {\n      info\n    } = this.state;\n    const temp = this.state.temp;\n    const loadedCoordenates = this.state.loadedCoordenates;\n    var ShowsInfo = Object.keys({\n      info\n    }).map((keyName, i) => /*#__PURE__*/React.createElement(\"ol\", {\n      className: \"clima\",\n      key: i,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"span\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 9\n      }\n    }, \"key: \", i, \" , Latitude: \", info.latitude, \", Longitude: \", info.longitude, \", elevation: \", info.elevation, \", generation time :\", info.generationtime_ms, \", utc: \", info.utc_offset_seconds, \",\")));\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"p\", {\n      className: \"loader\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 12\n      }\n    }, \"Loading...\"), /*#__PURE__*/React.createElement(Coordenates, {\n      items: loadedCoordenates,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 12\n      }\n    }), /*#__PURE__*/React.createElement(\"ul\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 7\n      }\n    }, ShowsInfo, \",\", temp));\n  }\n\n}\n\nexport default ShowsInfo;","map":{"version":3,"sources":["C:/Users/carod/Documents/React/weatherapplication/weatherapplication/frontend/src/components/Products/ShowsInfo.js"],"names":["React","Component","ShowsInfo","constructor","props","state","info","temp","componentDidMount","getItems","url","fetch","then","response","json","setState","hourly","temperature_2m","render","loadedCoordenates","Object","keys","map","keyName","i","latitude","longitude","elevation","generationtime_ms","utc_offset_seconds"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAgC,OAAhC;AAEA,OAAO,eAAP;;AACA,MAAMC,SAAN,SAAwBD,SAAxB,CAAkC;AAC9BE,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACnB,UAAMA,KAAN;AACA,SAAKC,KAAL,GAAa;AACXC,MAAAA,IAAI,EAAE,EADK;AAEXC,MAAAA,IAAI,EAAE;AAFK,KAAb;AAID;;AAGDC,EAAAA,iBAAiB,GAAG;AAChB,SAAKC,QAAL;AACH;;AACDA,EAAAA,QAAQ,GAAG;AAEL,UAAMC,GAAG,GAAI,+FAAb;AACCC,IAAAA,KAAK,CAACD,GAAD,CAAL,CACAE,IADA,CACKC,QAAQ,IAAIA,QAAQ,CAACC,IAAT,EADjB,EAEAF,IAFA,CAEKC,QAAQ,IAAI;AAChB,WAAKE,QAAL,CAAc;AAAE,gBAAQF,QAAV;AAAoB,gBAAQA,QAAQ,CAACG,MAAT,CAAgBC;AAA5C,OAAd;AAED,KALA;AAMF;;AAELC,EAAAA,MAAM,GAAG;AAEP,UAAM;AAAEZ,MAAAA;AAAF,QAAW,KAAKD,KAAtB;AACA,UAAME,IAAI,GAAG,KAAKF,KAAL,CAAWE,IAAxB;AACA,UAAMY,iBAAiB,GAAG,KAAKd,KAAL,CAAWc,iBAArC;AACA,QAAIjB,SAAS,GAAGkB,MAAM,CAACC,IAAP,CAAY;AAAEf,MAAAA;AAAF,KAAZ,EAAsBgB,GAAtB,CAA0B,CAACC,OAAD,EAAUC,CAAV,kBACxC;AAAI,MAAA,SAAS,EAAC,OAAd;AAAsB,MAAA,GAAG,EAAEA,CAA3B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBACMA,CADN,mBAEWlB,IAAI,CAACmB,QAFhB,mBAGYnB,IAAI,CAACoB,SAHjB,mBAIYpB,IAAI,CAACqB,SAJjB,yBAKkBrB,IAAI,CAACsB,iBALvB,aAMMtB,IAAI,CAACuB,kBANX,MADF,CADc,CAAhB;AAgBA,wBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACK;AAAG,MAAA,SAAS,EAAC,QAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBADL,eAEK,oBAAC,WAAD;AAAa,MAAA,KAAK,EAAEV,iBAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFL,eAGA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACGjB,SADH,OACeK,IADf,CAHA,CADF;AAUD;;AAvD+B;;AAyDlC,eAAeL,SAAf","sourcesContent":["import React, { Component} from 'react';\r\n\r\nimport './Coordenates';\r\nclass ShowsInfo extends Component {\r\n    constructor(props) {\r\n    super(props)\r\n    this.state = {\r\n      info: {},\r\n      temp: []\r\n    }\r\n  }\r\n\r\n\r\n  componentDidMount() {\r\n      this.getItems();\r\n  }\r\n  getItems() {\r\n\r\n        const url = `https://api.open-meteo.com/v1/forecast?latitude=-28.46&longitude=-65.80&hourly=temperature_2m`;\r\n         fetch(url)\r\n        .then(response => response.json())\r\n        .then(response => {\r\n          this.setState({ 'info': response, 'temp': response.hourly.temperature_2m });\r\n          \r\n        })\r\n      }\r\n    \r\n  render() {\r\n\r\n    const { info } = this.state;\r\n    const temp = this.state.temp;\r\n    const loadedCoordenates = this.state.loadedCoordenates;\r\n    var ShowsInfo = Object.keys({ info }).map((keyName, i) => (\r\n      <ol className=\"clima\" key={i}>\r\n        <span>\r\n        key: {i} ,\r\n        Latitude: {info.latitude},\r\n        Longitude: {info.longitude}, \r\n        elevation: {info.elevation},\r\n        generation time :{info.generationtime_ms}, \r\n        utc: {info.utc_offset_seconds},\r\n          </span>\r\n      </ol>\r\n\r\n    ))\r\n   \r\n    \r\n\r\n    return (\r\n      <div>\r\n          {<p className=\"loader\">Loading...</p>}\r\n          {<Coordenates items={loadedCoordenates} />}\r\n      <ul>\r\n        {ShowsInfo},{temp}\r\n    \r\n      </ul>\r\n      </div>)\r\n\r\n  }\r\n}\r\nexport default ShowsInfo;"]},"metadata":{},"sourceType":"module"}